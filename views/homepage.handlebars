{{#if logged_in}}
    <h2 class="vote-header">You can only vote for one of the candidates below</h2>
    {{#each candidates as |candidate| }}
      <div class="row align-center mb-5">
        <div class="vote-result flex-row col-md-6 justify-space-between">
          <h3><a href="/candidate/{{candidate.id}}">{{candidate.name}}</a></h3>
          <h3 class="votes">{{candidate.votes}}</h3> 
          <button class="vote-button" type="submit" value="{{candidate.id}}">Vote</button>
        </div> 
      </div>
    {{/each}}
{{else}}
    <h2 class="vote-header">Candidates:</h2>
    {{#each candidates as |candidate| }}
      <div class="row align-center mb-5">
        <div class="vote-result flex-row col-md-6 justify-space-between">
          <h3><a href="/candidate/{{candidate.id}}">{{candidate.name}}</a></h3>
          <h3 class="votes">{{candidate.votes}}</h3>
        </div> 
      </div>
    {{/each}}
{{/if}}

<div>
  <canvas id="myChart"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const ctx = document.getElementById('myChart');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['Sal Swift', 'Amiko Chen', 'Jordan Rodriguez', 'Blake Kim'],
      datasets: [{
        label: '# of Votes',
        data: [36, 21, 18, 10],
        borderWidth: 1
      }]
    },
    options: {
        indexAxis: 'y',
    }
  });
</script>
<script src="/js/vote.js"></script>

{{#if logged_in}}
  <h2 class="vote-header">You can only vote for one of the candidates below</h2>
{{else}}
  <h2 class="vote-header">Candidates:</h2>
{{/if}}

<canvas id="vote-chart"></canvas>

{{#each candidates}}
  <div class="row align-center mb-5">
    <div class="vote-result flex-row col-md-6 justify-space-between">
      <h3><a href="/candidate/{{this.id}}">{{this.name}}</a></h3>
    </div> 
  </div>
{{/each}}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const candidates = {{json candidates}};
  const candidateNames = candidates.map(candidate => candidate.name);
  const candidateVotes = candidates.map(candidate => candidate.votes);

  const ctx = document.getElementById('vote-chart').getContext('2d');
  const chart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: candidateNames,
      datasets: [{
        label: 'Votes',
        data: candidateVotes,
        backgroundColor: 'rgba(255, 99, 132, 0.2)',
        borderColor: 'rgba(255, 99, 132, 1)',
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true
          }
        }]
      }
    }
  });
</script>